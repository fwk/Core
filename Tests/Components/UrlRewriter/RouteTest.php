<?php

namespace Fwk\Core\Components\UrlRewriter;


/**
 * Test class for Route.
 * Generated by PHPUnit on 2013-10-07 at 23:17:29.
 */
class RouteTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Route
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Route('TestAction', '/test/:name', array(new RouteParameter('name')));
    }


    /**
     */
    public function testGetActionName() {
        $this->assertEquals('TestAction', $this->object->getActionName());
    }

    /**
     */
    public function testGetUri() {
        $this->assertEquals('/test/:name', $this->object->getUri());
    }

    /**
     */
    public function testMatch() {
        $this->assertTrue($this->object->match('/test/thisIsAName'));
        $this->assertFalse($this->object->match('/not/matching'));
        $this->assertFalse($this->object->match('/test/matching/not'));
    }

    /**
     */
    public function testGetParameter() {
        $this->assertInstanceOf('\Fwk\Core\Components\UrlRewriter\RouteParameter', $this->object->getParameter('name'));
        $this->setExpectedException('\Fwk\Core\Components\UrlRewriter\Exception');
        $this->object->getParameter('unknown');
        
    }

   
    /**
     */
    public function testGetParameters() {
        $this->assertEquals(1, count($this->object->getParameters()));
    }


    /**
     */
    public function testGetReverse() {
        $this->assertEquals('/test/joe', $this->object->getReverse(array('name' => 'joe')));
        $this->assertEquals('/test/joe?unknown=param', $this->object->getReverse(array('name' => 'joe', 'unknown' => 'param')));
        $this->assertFalse($this->object->getReverse(array('name' => null)));
    }
    
    /**
     */
    public function testGetReverseWithPredefinedParams() {
        $route1 = new Route('Test', '/test/:package', array(
            new RouteParameter('page', 'fwk/intro', null, true, 'fwk/intro'),
            new RouteParameter('package', null, null, true)
        ));
        
        $route2 = new Route('Test', '/test/:package/api', array(
            new RouteParameter('page', 'fwk/api', null, true, 'fwk/api'),
            new RouteParameter('package', null, null, true)
        ));
        
        $route3 = new Route('Test', '/:page', array(
            new RouteParameter('page', null, null, false, null),
        ));
        
        $service = new UrlRewriterService();
        $service->addRoutes(array($route1, $route2, $route3));
        
        $this->assertEquals('/test/Core/api', $service->reverse('Test', array('page' => 'fwk/api', 'package' => 'Core')));
        $this->assertEquals('/test/Core', $service->reverse('Test', array('page' => 'fwk/intro', 'package' => 'Core')));
        $this->assertEquals('/yop', $service->reverse('Test', array('page' => 'yop')));
        $this->assertEquals('/', $service->reverse('Test', array()));
    }
}

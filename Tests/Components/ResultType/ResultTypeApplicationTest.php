<?php

namespace Fwk\Core\Components\ResultType;

use Fwk\Di\ClassDefinition;
use Symfony\Component\HttpFoundation\Request;
/**
 * Test class for ResultTypeService.
 * Generated by PHPUnit on 2013-10-07 at 00:23:59.
 */
class ResultTypeApplicationTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var \Fwk\Core\Application
     */
    protected $app;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $service = new ResultTypeService();
        $service->addType('json', new JsonResultType());
        $service->addType('php', new PhpTemplateResultType(array('templatesDir' => TEST_RESOURCES_DIR)));
        $service->addType('redirect', new RedirectResultType());
        
        $service->register('TestAction', \Fwk\Core\Action\Result::SUCCESS, 'json');
        $service->register('TestAction', \Fwk\Core\Action\Result::REDIRECT, 'redirect', array('uri' => '/'));
        $service->register('TestAction', 'template', 'php', array('file' => 'phptemplate_resulttype.php'));
        
        $app = \Fwk\Core\Application::factory('testApp')
                ->addListener(new \Fwk\Core\Components\RequestMatcher\RequestMatcherListener('requestMatcher'))
                ->addListener(new ResultTypeListener('resultTypeService'));
        $app['TestAction'] = function($result) {
            return $result;
        };
        $app['TestActionObj'] = function() {
            return new \stdClass();
        };
        $app->getServices()->set(
            'requestMatcher', 
            new ClassDefinition(
                'Fwk\\Core\\Components\\RequestMatcher\\RequestMatcher'
            ), 
            true
        );
        $app->getServices()->set('resultTypeService', $service, true);
        
        $this->object = $app;
    }
    
    public function testJsonResultType()
    {
        $req = Request::create('/TestAction.action?result=success');
        $result = $this->object->run($req);
        
        $this->assertInstanceOf('\Symfony\Component\HttpFoundation\JsonResponse', $result);
    }
    
    public function testRedirectResultType()
    {
        $req = Request::create('/TestAction.action?result=redirect');
        $result = $this->object->run($req);
        
        $this->assertInstanceOf('\Symfony\Component\HttpFoundation\RedirectResponse', $result);
        $this->assertEquals('/', $result->getTargetUrl());
    }
    
    public function testPhpTemplateResultType()
    {
        $req = Request::create('/TestAction.action?result=template');
        $result = $this->object->run($req);
        
        $this->assertInstanceOf('\Symfony\Component\HttpFoundation\Response', $result);
        $this->assertEquals('I\'m a PHP template :)', $result->getContent());
    }
    
    public function testActionReturnsAnObject()
    {
        $req = Request::create('/TestActionObj.action');
        $result = $this->object->run($req);
        
        $this->assertInstanceOf('\stdClass', $result);
    }
}
